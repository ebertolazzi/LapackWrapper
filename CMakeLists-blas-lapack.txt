############################################################################
#                                                                          #
#  file: CMakeLists.txt                                                    #
#  Copyright (C) 2016                                                      #
#      Enrico Bertolazzi                                                   #
#      Dipartimento di Ingegneria Industriale                              #
#      Universita` degli Studi di Trento                                   #
#      email: enrico.bertolazzi@ing.unitn.it                               #
#                                                                          #
############################################################################

IF( APPLE )
  IF ( LAPACK_WRAPPER_USE_OPENBLAS OR LAPACK_WRAPPER_USE_BLASFEO )
    EXECUTE_PROCESS( COMMAND gfortran -print-libgcc-file-name OUTPUT_VARIABLE GFORTRANDIR )
    GET_FILENAME_COMPONENT( GFORTRANDIR1 ${GFORTRANDIR} DIRECTORY )
    MESSAGE( STATUS ${GFORTRANDIR1} )
    FIND_LIBRARY( GFORTRAN gfortran HINTS ${GFORTRANDIR1}/../../.. )
    FIND_LIBRARY( OPENBLAS openblas HINTS /usr/local/opt/openblas/lib )
    SET( lapackblas_libraries ${OPENBLAS} ${GFORTRAN} )
    INCLUDE_DIRECTORIES( /usr/local/opt/openblas/include )
    IF( LAPACK_WRAPPER_USE_BLASFEO )
      FIND_LIBRARY( BLASFEO blasfeo HINTS /opt/blasfeo/lib/ )
      SET( lapackblas_libraries ${lapackblas_libraries} ${BLASFEO} )
      INCLUDE_DIRECTORIES( /opt/blasfeo/include/ )
    ENDIF()
  ELSEIF( LAPACK_WRAPPER_USE_MKL )
    FIND_LIBRARY( MKL_CORE  mkl_core         HINTS /opt/intel/mkl/lib )
    FIND_LIBRARY( MKL_INTEL mkl_intel_thread HINTS /opt/intel/mkl/lib )
    FIND_LIBRARY( MKL_RT    mkl_rt           HINTS /opt/intel/mkl/lib )
    FIND_LIBRARY( MKL_IOMP5 iomp5            HINTS /opt/intel/lib     )
    SET( lapackblas_libraries  ${MKL_CORE} ${MKL_INTEL} ${MKL_RT} ${MKL_IOMP5} )
    INCLUDE_DIRECTORIES( /opt/intel/mkl/include/ )
  ELSE()
    FIND_PACKAGE(BLAS)
    FIND_PACKAGE(LAPACK)
    IF ( LAPACK_FOUND AND BLAS_FOUND )
      SET( lapackblas_libraries ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} )
    ENDIF()
  ENDIF()
ELSEIF( UNIX OR LINUX )
  EXECUTE_PROCESS(COMMAND uname -m OUTPUT_VARIABLE ARCH)
  SET(THREADS_PREFER_PTHREAD_FLAG ON)
  FIND_PACKAGE(Threads REQUIRED)
  IF ( LAPACK_WRAPPER_USE_OPENBLAS OR LAPACK_WRAPPER_USE_BLASFEO )
    EXECUTE_PROCESS( COMMAND gfortran -print-libgcc-file-name OUTPUT_VARIABLE GFORTRANDIR )
    GET_FILENAME_COMPONENT( GFORTRANDIR1 ${GFORTRANDIR} DIRECTORY )
    MESSAGE( STATUS "GFORTRANDIR = ${GFORTRANDIR1}" )
    FIND_LIBRARY( GFORTRAN gfortran HINTS ${GFORTRANDIR1} )
    INCLUDE_DIRECTORIES( /usr/include/${ARCH}-linux-gnu )
    FIND_LIBRARY( OPENBLAS openblas HINTS /usr/lib /usr/local/lib /usr/lib/${ARCH}-linux-gnu/openblas )
    FIND_LIBRARY( OPENMP   omp      HINTS /usr/lib /usr/local/lib /usr/lib/${ARCH}-linux-gnu /usr/lib/llvm-10/lib )
    FIND_LIBRARY( DL       dl       HINTS /usr/lib /usr/local/lib /usr/lib/${ARCH}-linux-gnu /usr/lib/llvm-10/lib )
    SET( lapackblas_libraries ${OPENBLAS} ${OPENMP} ${DL} ${GFORTRAN}
    )
  ELSEIF( LAPACK_WRAPPER_USE_MKL )
    SET( MKLBITS intel64 )
    FIND_LIBRARY( MKL_CORE  mkl_core         HINTS /opt/intel/mkl/lib/${MKLBITS}  )
    FIND_LIBRARY( MKL_INTEL mkl_intel_thread HINTS /opt/intel/mkl/lib/${MKLBITS}  )
    FIND_LIBRARY( MKL_RT    mkl_rt           HINTS /opt/intel/mkl/lib/${MKLBITS}  )
    FIND_LIBRARY( MKL_IOMP5 iomp5            HINTS /opt/intel/lib/${MKLBITS}      )
    SET( lapackblas_libraries  ${MKL_CORE} ${MKL_INTEL} ${MKL_RT} ${MKL_IOMP5} )
    INCLUDE_DIRECTORIES( /opt/intel/mkl/include/ )
  ELSE()
    FIND_PACKAGE(BLAS)
    FIND_PACKAGE(LAPACK)
    IF ( LAPACK_FOUND AND BLAS_FOUND )
      SET( lapackblas_libraries ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} )
    ENDIF()
  ENDIF()
  INCLUDE_DIRECTORIES( /usr/local/include /opt/intel/mkl/include )
  IF( LAPACK_WRAPPER_USE_BLASFEO )
    FIND_LIBRARY( BLASFEO blasfeo HINTS /opt/blasfeo/lib/ )
    SET( lapackblas_libraries ${lapackblas_libraries} ${BLASFEO} )
    INCLUDE_DIRECTORIES( /opt/blasfeo/include/ )
  ENDIF()
ELSE()
  IF ( BITS MATCHES "x64")
    FIND_LIBRARY(
      lapackblas_libraries libopenblas_x64.lib
      HINTS ${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/dll ${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/lib
    )
  ELSE()
    FIND_LIBRARY(
      lapackblas_libraries libopenblas_x86.lib
      HINTS ${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/dll ${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/lib
    )
  ENDIF()
  SET( lapackblas_libraries ${lapackblas_libraries} ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} )
ENDIF()
